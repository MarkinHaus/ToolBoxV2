name: Release Flow

on:
  release:
    types: [published, created]

jobs:
  build:
    name: Build Python package
    runs-on: ubuntu-latest
    outputs:
      artifact_name: dist-artifacts
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build package
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test dependencies
        run: python -m pip install pytest

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

      - name: Install from dist
        run: |
          pip install dist/*.whl

      - name: Run tests
        run: pytest /toolboxV2/tests/

  test-rust:
    name: Rust Build & Test (Actix)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build & Test Rust Server
        working-directory: ./toolboxv2/src-core
        run: |
          cargo build --release
          cargo test

  check-tauri:
    runs-on: ubuntu-latest
    outputs:
        should_build: ${{ steps.eval.outputs.should_build }}
    steps:
      -   uses: actions/checkout@v4
      -   name: Get release commit message
          id: commit_msg
          run: |
              tag_sha=$(git rev-list -n 1 ${{ github.event.release.tag_name }})
              message=$(git log -1 --pretty=%B "$tag_sha")
              echo "commit_message=$message" >> $GITHUB_OUTPUT

      -   name: Evaluate Tauri flag
          id: eval
          run: |
              msg="${{ steps.commit_msg.outputs.commit_message }}"
              if echo "$msg" | grep -qi "Tauri=True"; then
                echo "should_build=true" >> $GITHUB_OUTPUT
              else
                echo "should_build=false" >> $GITHUB_OUTPUT
              fi

  publish-tauri:
    needs: check-tauri
    if: ${{ needs.check-tauri.outputs.should_build == 'true' }}
    name: Build Tauri App
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        working-directory: ./toolboxv2/web
        run: |
            npm install
            cd ../simple-core
            npm install
            cd ..
            npm install
            npm run build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./toolboxv2/simple-core
          distPath: ./toolboxv2/dist
          tagName: simple-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test-rust]
    outputs:
      dockerfile-url: ${{ steps.upload.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image locally
        run: docker build -t toolboxv2:release .
      - name: Save server binary
        run: |
          mkdir -p release-artifacts/bin
          cp ./toolboxv2/src-core/target/release/toolbox-server release-artifacts/bin/
      - name: Upload Dockerfile and server binary
        id: upload
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Dockerfile
            release-artifacts/bin/toolbox-server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notify Webhook Server
    needs: [build-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Notify deployment server
        run: |
          curl -X POST "${{ secrets.DEPLOY_WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -d '{"event":"new_release", "dockerfile_url": "${{ needs.build-docker.outputs.dockerfile-url }}"}'
