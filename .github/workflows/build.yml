name: build

on:
    push:
        branches:
            - light-tb
            - mod-server
            - master
    pull_request:


jobs:
    py-check:
        runs-on: ${{ matrix.config.os }}
        name: ${{ matrix.config.os }} (${{ matrix.config.py }})
        strategy:
            fail-fast: false
            matrix:
                config:
                    # - { os: ubuntu-latest, py: "3.9" }
                    # - { os: ubuntu-latest, py: "3.10" }
                    - { os: ubuntu-latest, py: "3.11" }
                    - { os: ubuntu-latest, py: "3.12" }
                    # - { os: ubuntu-latest, py: "3.13" }
                   # - { os: windows-latest, py: "3.9" }
                   # - { os: windows-latest, py: "3.10" }
                    - { os: windows-latest, py: "3.11" }
                    - { os:  windows-latest, py: "3.12" }
                    # - { os:  windows-latest, py: "3.13" }
                   # - { os: macOS-latest, py: "3.9" }
                   #  - { os: macOS-latest, py: "3.10" }
                    - { os: macOS-latest, py: "3.11" }
                    - { os:  macOS-latest, py: "3.12" }
                    # - { os:  macOS-latest, py: "3.13" }

        env:
            SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        steps:
        -   name: CHECKOUT CODE
            uses: actions/checkout@v4
        -   name: SETUP PYTHON
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.config.py }}
        -   name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install --user --no-cache-dir Cython
        -   name: Install toolboxv2 with ISAA
            run: |
                python -m pip install -e toolboxv2/mods/isaa --user
                python -m pip install . --user
            working-directory: ${{ github.workspace }}
        -   name: PKG-TEST
            run: |
                python -m unittest discover -s toolboxv2/tests/

    publish-tauri:
       permissions:
         contents: write
       strategy:
         fail-fast: false
         matrix:
           include:
             - platform: 'macos-latest' # for Arm based macs (M1 and above).
               args: '--target aarch64-apple-darwin'
       runs-on: ${{ matrix.platform }}
       steps:
         - uses: actions/checkout@v4
         - name: setup node
           uses: actions/setup-node@v4
           with:
             node-version: lts/*
         - name: install Rust stable
           uses: dtolnay/rust-toolchain@stable
           with:
             # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
             targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
         - name: install dependencies (ubuntu only)
           if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
           run: |
             sudo apt-get update
             sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
           # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
           # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
         - name: install frontend dependencies
           working-directory: ./toolboxv2/web

           run: |
                npm install
                cd ../simple-core
                npm install
                cd ..
                npm install
                npm run build
         - uses: tauri-apps/tauri-action@v0
           env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           with:
              projectPath: ./toolboxv2/simple-core
              distPath: ./toolboxv2/dist
              tagName: simple-v__VERSION__
              releaseName: 'App v__VERSION__'
              releaseBody: 'See the assets to download this version and install.'
              releaseDraft: true
              prerelease: false
              args: ${{ matrix.args }}
